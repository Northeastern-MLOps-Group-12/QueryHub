name: Run Tests and Deploy to Cloud Run

on:
  push:
    branches:
      - main
      - dev
    paths:
      - "backend/**"
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  REGION: ${{ secrets.REGION }}
  REPOSITORY: ${{ secrets.REPOSITORY }}
  IMAGE_NAME: backend
  SERVICE: backend
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
  MODEL: gemini
  MODEL_NAME: gemini-2.5-flash
  EMBEDDING_MODEL: text-embedding-004
  FRONTEND_ORIGIN: ${{ secrets.FRONTEND_ORIGIN }}
  CLOUD_SQL_INSTANCE: ${{ secrets.CLOUD_SQL_INSTANCE }}

jobs:
  # 1️⃣ Run Unit Tests
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        working-directory: tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-mock

      - name: Run unit tests
        working-directory: tests
        run: |
          pytest -v --maxfail=1 --disable-warnings agents backend connectors


  # 2️⃣ Deploy to Cloud Run (only if tests pass)
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: test     # <-- ensures tests run before deployment
    if: success()   # <-- only deploy if tests succeeded

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      
      - name: Install dependencies for backend
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ env.SERVICE }}/requirements.txt

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and Push Backend Docker Image
        run: |
          IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}"
          docker build -t $IMAGE -f ${{ env.SERVICE }}/Dockerfile .
          docker push $IMAGE

      - name: Deploy Backend to Cloud Run
        run: |
          IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}"
          gcloud run deploy ${{ env.SERVICE }} \
            --image=$IMAGE \
            --add-cloudsql-instances=${{ env.CLOUD_SQL_INSTANCE }} \
            --region=${{ env.REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --service-account=${{ secrets.SERVICE_ACCOUNT_EMAIL }} \
            --timeout=600s \
            --set-env-vars DATABASE_URL=${{ env.DATABASE_URL }},LLM_API_KEY=${{ env.LLM_API_KEY }},MODEL=${{ env.MODEL }},MODEL_NAME=${{ env.MODEL_NAME }},EMBEDDING_MODEL=${{ env.EMBEDDING_MODEL }},FRONTEND_ORIGIN=${{ env.FRONTEND_ORIGIN }}

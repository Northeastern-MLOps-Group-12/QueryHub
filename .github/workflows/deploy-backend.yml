name: Deploy to Cloud Run

on:
  workflow_run:
    workflows: ["Run Unit Tests"]
    types:
      - completed

jobs:
  deploy:
    if: >
      ${{ github.event.workflow_run.conclusion == 'success' &&
          (github.event.workflow_run.head_branch == 'main' ||
           github.event.workflow_run.head_branch == 'dev') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies for tests
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev

      - name: Build and Push Backend API Docker Image
        run: |
          IMAGE="${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY }}/backend"
          docker build -t $IMAGE -f backend/Dockerfile .
          docker push $IMAGE

      - name: Deploy Backend to Cloud Run
        run: |
          IMAGE="${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY }}/backend"
          gcloud run deploy backend \
            --image=$IMAGE \
            --add-cloudsql-instances=queryhub-473901:us-central1:nl-to-sql-db \
            --region=${{ secrets.REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --service-account=${{ secrets.SERVICE_ACCOUNT_EMAIL }} \
            --timeout=600s \
            --set-env-vars DATABASE_URL=${{ secrets.DATABASE_URL }},LLM_API_KEY=${{ secrets.LLM_API_KEY }},MODEL=gemini,MODEL_NAME=gemini-2.5-flash,EMBEDDING_MODEL=text-embedding-004,FRONTEND_ORIGIN=${{ secrets.FRONTEND_ORIGIN }}